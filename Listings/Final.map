Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    main.o(.text.main) refers to main.o(.bss.fila_mensagens) for fila_mensagens
    main.o(.text.main) refers to main.o(.text.Thread_Temperatura) for Thread_Temperatura
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to main.o(.bss.tid_Thread_Temperatura) for tid_Thread_Temperatura
    main.o(.text.main) refers to main.o(.text.Thread_Luminosidade) for Thread_Luminosidade
    main.o(.text.main) refers to main.o(.bss.tid_Thread_Luminosidade) for tid_Thread_Luminosidade
    main.o(.text.main) refers to main.o(.text.Thread_Consome) for Thread_Consome
    main.o(.text.main) refers to main.o(.bss.tid_Thread_Consome) for tid_Thread_Consome
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.Thread_Temperatura) refers to rand.o(.text) for rand
    main.o(.text.Thread_Temperatura) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.Thread_Temperatura) refers to strcpy.o(.text) for strcpy
    main.o(.text.Thread_Temperatura) refers to main.o(.bss.fila_mensagens) for fila_mensagens
    main.o(.text.Thread_Temperatura) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.text.Thread_Temperatura) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.ARM.exidx.text.Thread_Temperatura) refers to main.o(.text.Thread_Temperatura) for [Anonymous Symbol]
    main.o(.text.Thread_Luminosidade) refers to rand.o(.text) for rand
    main.o(.text.Thread_Luminosidade) refers to main.o(.rodata.str1.1) for .L.str.1
    main.o(.text.Thread_Luminosidade) refers to strcpy.o(.text) for strcpy
    main.o(.text.Thread_Luminosidade) refers to main.o(.bss.fila_mensagens) for fila_mensagens
    main.o(.text.Thread_Luminosidade) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.text.Thread_Luminosidade) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.ARM.exidx.text.Thread_Luminosidade) refers to main.o(.text.Thread_Luminosidade) for [Anonymous Symbol]
    main.o(.text.Thread_Consome) refers to main.o(.bss.fila_mensagens) for fila_mensagens
    main.o(.text.Thread_Consome) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(.text.Thread_Consome) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.Thread_Consome) refers to printfa.o(i.__0printf) for printf
    main.o(.text.Thread_Consome) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(.ARM.exidx.text.Thread_Consome) refers to main.o(.text.Thread_Consome) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.LockTS_Overflow) for LockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UnlockTS_Overflow) for UnlockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UpdateTS) for UpdateTS
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to memcpya.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc8) for atomic_inc8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.LockTS_Overflow) refers to eventrecorder.o(.text.LockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.UnlockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.text.atomic_wr32) for atomic_wr32
    eventrecorder.o(.ARM.exidx.text.UpdateTS) refers to eventrecorder.o(.text.UpdateTS) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr8) refers to eventrecorder.o(.text.atomic_wr8) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr32) refers to eventrecorder.o(.text.atomic_wr32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc8) refers to eventrecorder.o(.text.atomic_inc8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text.fputc) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.index) for stdout_putchar.index
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.buffer) for stdout_putchar.buffer
    retarget_io.o(.text.stdout_putchar) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    startup_tm4c129.o(RESET) refers to startup_tm4c129.o(STACK) for __initial_sp
    startup_tm4c129.o(RESET) refers to startup_tm4c129.o(.text) for Reset_Handler
    startup_tm4c129.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_tm4c129.o(.text) refers to system_tm4c129.o(.text.SystemInit) for SystemInit
    startup_tm4c129.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c129.o(.text.SystemCoreClockUpdate) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c129.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c129.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c129.o(.text.SystemInit) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c129.o(.ARM.exidx.text.SystemInit) refers to system_tm4c129.o(.text.SystemInit) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    rand.o(.text) refers to rand.o(.data) for .data
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c129.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c129.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.Thread_Temperatura), (8 bytes).
    Removing main.o(.ARM.exidx.text.Thread_Luminosidade), (8 bytes).
    Removing main.o(.ARM.exidx.text.Thread_Consome), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (146 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord2), (90 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord4), (150 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UpdateTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc8), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.text.__aeabi_assert), (188 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.text.abort), (4 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.rodata.str1.1), (39 bytes).
    Removing startup_tm4c129.o(HEAP), (0 bytes).
    Removing system_tm4c129.o(.text), (0 bytes).
    Removing system_tm4c129.o(.text.SystemCoreClockUpdate), (20 bytes).
    Removing system_tm4c129.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c129.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (104 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (144 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (180 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (176 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

400 unused section(s) (total 8910 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    RTE/Device/TM4C1294NCPDT/startup_TM4C129.s 0x00000000   Number         0  startup_tm4c129.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_TM4C129.c                         0x00000000   Number         0  system_tm4c129.o ABSOLUTE
    RESET                                    0x00000000   Section      512  startup_tm4c129.o(RESET)
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x00000200   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000200   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000204   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000208   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000208   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000208   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000210   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000210   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000210   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000210   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000214   Number         0  startup_tm4c129.o(.text)
    .text                                    0x00000214   Section      276  startup_tm4c129.o(.text)
    [Anonymous Symbol]                       0x00000328   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x00000350   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x00000360   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x00000372   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x00000388   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x000003a4   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x000003a6   Number         0  irq_armv7m.o(.text)
    .text                                    0x000003f0   Section        0  rand.o(.text)
    .text                                    0x00000414   Section        0  memcpya.o(.text)
    .text                                    0x00000438   Section        0  memseta.o(.text)
    .text                                    0x0000045c   Section        0  strcpy.o(.text)
    .text                                    0x0000046e   Section        0  uidiv.o(.text)
    .text                                    0x0000049a   Section        0  uldiv.o(.text)
    .text                                    0x000004fc   Section        0  iusefp.o(.text)
    .text                                    0x000004fc   Section        0  dadd.o(.text)
    .text                                    0x0000064a   Section        0  dmul.o(.text)
    .text                                    0x0000072e   Section        0  ddiv.o(.text)
    .text                                    0x0000080c   Section        0  dfixul.o(.text)
    .text                                    0x0000083c   Section       48  cdrcmple.o(.text)
    .text                                    0x0000086c   Section       36  init.o(.text)
    .text                                    0x00000890   Section        0  llshl.o(.text)
    .text                                    0x000008ae   Section        0  llushr.o(.text)
    .text                                    0x000008ce   Section        0  llsshr.o(.text)
    .text                                    0x000008f2   Section        0  depilogue.o(.text)
    EventCheckFilter                         0x000009ad   Thumb Code    60  eventrecorder.o(.text.EventCheckFilter)
    [Anonymous Symbol]                       0x000009ac   Section        0  eventrecorder.o(.text.EventCheckFilter)
    EventGetTS                               0x000009e9   Thumb Code    90  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x000009e8   Section        0  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x00000a44   Section        0  eventrecorder.o(.text.EventRecordData)
    EventRecordItem                          0x00000bc9   Thumb Code   254  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x00000bc8   Section        0  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x00000cc8   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x00000d5c   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x00000f20   Section        0  eventrecorder.o(.text.EventRecorderStart)
    [Anonymous Symbol]                       0x00000f6c   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x00000f78   Section        0  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    [Anonymous Symbol]                       0x00000f84   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    GetContext                               0x00000fa9   Thumb Code    18  eventrecorder.o(.text.GetContext)
    [Anonymous Symbol]                       0x00000fa8   Section        0  eventrecorder.o(.text.GetContext)
    GetRecordIndex                           0x00000fbd   Thumb Code    18  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x00000fbc   Section        0  eventrecorder.o(.text.GetRecordIndex)
    IncrementRecordsDumped                   0x00000fd1   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsDumped)
    [Anonymous Symbol]                       0x00000fd0   Section        0  eventrecorder.o(.text.IncrementRecordsDumped)
    IncrementRecordsWritten                  0x00000fe5   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x00000fe4   Section        0  eventrecorder.o(.text.IncrementRecordsWritten)
    LockRecord                               0x00000ff9   Thumb Code    54  eventrecorder.o(.text.LockRecord)
    [Anonymous Symbol]                       0x00000ff8   Section        0  eventrecorder.o(.text.LockRecord)
    LockTS_Overflow                          0x00001031   Thumb Code    18  eventrecorder.o(.text.LockTS_Overflow)
    [Anonymous Symbol]                       0x00001030   Section        0  eventrecorder.o(.text.LockTS_Overflow)
    MessageQueueGet                          0x00001043   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00001042   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x00001083   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00001082   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x000010db   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x000010da   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x000010f8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00001100   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00001120   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00001124   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0000112c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x0000115c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00001160   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00001164   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00001168   Number         4  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x0000116d   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0000116c   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x00001179   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00001178   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x0000117f   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0000117e   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x0000118b   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x0000118a   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x00001191   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00001190   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00001198   Section        0  system_tm4c129.o(.text.SystemInit)
    ThreadFlagsCheck                         0x000011bd   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x000011bc   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00001220   Section        0  main.o(.text.Thread_Consome)
    [Anonymous Symbol]                       0x00001260   Section        0  main.o(.text.Thread_Luminosidade)
    [Anonymous Symbol]                       0x000012bc   Section        0  main.o(.text.Thread_Temperatura)
    TimerInsert                              0x00001319   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001318   Section        0  rtx_timer.o(.text.TimerInsert)
    UnlockRecord                             0x0000135d   Thumb Code    50  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x0000135c   Section        0  eventrecorder.o(.text.UnlockRecord)
    UnlockTS_Overflow                        0x00001391   Thumb Code    18  eventrecorder.o(.text.UnlockTS_Overflow)
    [Anonymous Symbol]                       0x00001390   Section        0  eventrecorder.o(.text.UnlockTS_Overflow)
    UpdateTS                                 0x000013a5   Thumb Code    26  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x000013a4   Section        0  eventrecorder.o(.text.UpdateTS)
    atomic_inc32                             0x000013c1   Thumb Code    32  eventrecorder.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x000013c0   Section        0  eventrecorder.o(.text.atomic_inc32)
    atomic_inc8                              0x000013e1   Thumb Code    36  eventrecorder.o(.text.atomic_inc8)
    [Anonymous Symbol]                       0x000013e0   Section        0  eventrecorder.o(.text.atomic_inc8)
    atomic_wr32                              0x00001405   Thumb Code    32  eventrecorder.o(.text.atomic_wr32)
    [Anonymous Symbol]                       0x00001404   Section        0  eventrecorder.o(.text.atomic_wr32)
    atomic_wr8                               0x00001425   Thumb Code    40  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x00001424   Section        0  eventrecorder.o(.text.atomic_wr8)
    crc16_ccitt                              0x0000144d   Thumb Code   130  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x0000144c   Section        0  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x000014d0   Section        0  retarget_io.o(.text.fputc)
    [Anonymous Symbol]                       0x00001500   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x000015d0   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x000015f0   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x000015f4   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x0000161c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x00001620   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00001624   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x0000164c   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00001650   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x00001670   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00001674   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x000016e0   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x000016e4   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.2_0                             0x00001704   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00001708   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x00001784   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00001788   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x000017b8   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x000017c0   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x000017c4   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x000017c6   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00001832   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00001874   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x000018aa   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x000018e4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x0000192e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x00001967   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00001966   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00001a10   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x00001a30   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x00001a34   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00001a7c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x00001ac4   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00001b4c   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00001bb8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x00001bbd   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00001bbc   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x00001bf1   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00001bf0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x00001c6d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001c6c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001ca8   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x00001cf9   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00001cf8   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00001d18   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x00001d69   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001d68   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.51_0                            0x00001dbc   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadJoinWakeup                    0x00001dc1   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00001dc0   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00001dde   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001df0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00001e1c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00001e30   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x00001e57   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001e56   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001e80   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x00001e90   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00001e94   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00001ea8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_1                            0x00001ed8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001edc   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001ee8   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x00001f20   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001f24   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001f54   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001fc8   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001fcc   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x00001fe4   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x00001fe8   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x00001fec   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x0000200d   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0000200c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00002078   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0000207c   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x00002084   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00002088   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.16_0                            0x000020a8   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x000020ac   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.25_0                            0x000020cc   Number         4  rtx_thread.o(.text.osThreadYield)
    stdout_putchar                           0x000020d1   Thumb Code   124  retarget_io.o(.text.stdout_putchar)
    [Anonymous Symbol]                       0x000020d0   Section        0  retarget_io.o(.text.stdout_putchar)
    svcRtxDelay                              0x0000214d   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0000214c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x00002165   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00002164   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x0000216c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x00002171   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00002170   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x00002264   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x00002268   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x0000226c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x00002271   Thumb Code   124  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x00002270   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_0                            0x000022ec   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x000022f0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x000022f4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x000022f8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x000022fd   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000022fc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x000023c4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x000023c9   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x000023c8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x000024d8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x000024dc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x000024e1   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x000024e0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxThreadExit                         0x00002589   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00002588   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.53_0                            0x000025d0   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x000025d5   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x000025d4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_1                            0x000027ac   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_2                            0x000027b0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_3                            0x000027b4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_4                            0x000027b8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x000027bd   Thumb Code    52  rtx_thread.o(.text.svcRtxThreadYield)
    [Anonymous Symbol]                       0x000027bc   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.46_0                            0x000027f0   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    i.__0printf                              0x000027f4   Section        0  printfa.o(i.__0printf)
    i.__scatterload_copy                     0x00002814   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00002822   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00002824   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x00002835   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x00002834   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x000029b9   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x000029b8   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x00003095   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x00003094   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x000030b9   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x000030b8   Section        0  printfa.o(i._printf_pre_padding)
    __tagsym$$used.0                         0x000030e8   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x00003158   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x00003190   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    os_idle_thread_attr                      0x000031ac   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x000031ac   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x000031d0   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x000031d0   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x000031e8   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x000031e8   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str.2                                 0x0000320c   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000320c   Section        0  main.o(.rodata.str1.1)
    .L.str                                   0x00003214   Data          12  main.o(.rodata.str1.1)
    .L.str.1                                 0x00003220   Data          13  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003230   Section        0  rtx_kernel.o(.rodata.str1.4)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    _rand_state                              0x20000004   Data           4  rand.o(.data)
    .data                                    0x20000004   Section        4  rand.o(.data)
    TS_OverflowLock                          0x200000c0   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0x200000c0   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    EventBuffer                              0x20000100   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20000100   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20000500   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20000580   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x200005a8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x200005a8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x200005e8   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x200085e8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x200085e8   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x200085ec   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x200085ec   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20008620   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20008620   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20008670   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20008670   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200086b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200086f8   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x200086f8   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x200088f8   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x200088f8   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    stdout_putchar.buffer                    0x20008af8   Data           8  retarget_io.o(.bss.stdout_putchar.buffer)
    [Anonymous Symbol]                       0x20008af8   Section        0  retarget_io.o(.bss.stdout_putchar.buffer)
    stdout_putchar.index                     0x20008b00   Data           4  retarget_io.o(.bss.stdout_putchar.index)
    [Anonymous Symbol]                       0x20008b00   Section        0  retarget_io.o(.bss.stdout_putchar.index)
    STACK                                    0x20008b10   Section      512  startup_tm4c129.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c129.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x00000200   Data           0  startup_tm4c129.o(RESET)
    __Vectors_Size                           0x00000200   Number         0  startup_tm4c129.o ABSOLUTE
    __main                                   0x00000201   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000201   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000205   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000209   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000209   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000209   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000209   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000211   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000211   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000215   Thumb Code     8  startup_tm4c129.o(.text)
    NMI_Handler                              0x0000021d   Thumb Code     2  startup_tm4c129.o(.text)
    HardFault_Handler                        0x0000021f   Thumb Code     2  startup_tm4c129.o(.text)
    MemManage_Handler                        0x00000221   Thumb Code     2  startup_tm4c129.o(.text)
    BusFault_Handler                         0x00000223   Thumb Code     2  startup_tm4c129.o(.text)
    UsageFault_Handler                       0x00000225   Thumb Code     2  startup_tm4c129.o(.text)
    DebugMon_Handler                         0x00000229   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOA_Handler                            0x0000022f   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOB_Handler                            0x00000231   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOC_Handler                            0x00000233   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOD_Handler                            0x00000235   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOE_Handler                            0x00000237   Thumb Code     2  startup_tm4c129.o(.text)
    UART0_Handler                            0x00000239   Thumb Code     2  startup_tm4c129.o(.text)
    UART1_Handler                            0x0000023b   Thumb Code     2  startup_tm4c129.o(.text)
    SSI0_Handler                             0x0000023d   Thumb Code     2  startup_tm4c129.o(.text)
    I2C0_Handler                             0x0000023f   Thumb Code     2  startup_tm4c129.o(.text)
    PMW0_FAULT_Handler                       0x00000241   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_0_Handler                           0x00000243   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_1_Handler                           0x00000245   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_2_Handler                           0x00000247   Thumb Code     2  startup_tm4c129.o(.text)
    QEI0_Handler                             0x00000249   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS0_Handler                          0x0000024b   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS1_Handler                          0x0000024d   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS2_Handler                          0x0000024f   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS3_Handler                          0x00000251   Thumb Code     2  startup_tm4c129.o(.text)
    WDT0_Handler                             0x00000253   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER0A_Handler                          0x00000255   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER0B_Handler                          0x00000257   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER1A_Handler                          0x00000259   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER1B_Handler                          0x0000025b   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER2A_Handler                          0x0000025d   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER2B_Handler                          0x0000025f   Thumb Code     2  startup_tm4c129.o(.text)
    COMP0_Handler                            0x00000261   Thumb Code     2  startup_tm4c129.o(.text)
    COMP1_Handler                            0x00000263   Thumb Code     2  startup_tm4c129.o(.text)
    COMP2_Handler                            0x00000265   Thumb Code     2  startup_tm4c129.o(.text)
    SYSCTL_Handler                           0x00000267   Thumb Code     2  startup_tm4c129.o(.text)
    FLASH_Handler                            0x00000269   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOF_Handler                            0x0000026b   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOG_Handler                            0x0000026d   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOH_Handler                            0x0000026f   Thumb Code     2  startup_tm4c129.o(.text)
    UART2_Handler                            0x00000271   Thumb Code     2  startup_tm4c129.o(.text)
    SSI1_Handler                             0x00000273   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER3A_Handler                          0x00000275   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER3B_Handler                          0x00000277   Thumb Code     2  startup_tm4c129.o(.text)
    I2C1_Handler                             0x00000279   Thumb Code     2  startup_tm4c129.o(.text)
    CAN0_Handler                             0x0000027b   Thumb Code     2  startup_tm4c129.o(.text)
    CAN1_Handler                             0x0000027d   Thumb Code     2  startup_tm4c129.o(.text)
    ETH_Handler                              0x0000027f   Thumb Code     2  startup_tm4c129.o(.text)
    HIB_Handler                              0x00000281   Thumb Code     2  startup_tm4c129.o(.text)
    USB0_Handler                             0x00000283   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_3_Handler                           0x00000285   Thumb Code     2  startup_tm4c129.o(.text)
    UDMA_Handler                             0x00000287   Thumb Code     2  startup_tm4c129.o(.text)
    UDMAERR_Handler                          0x00000289   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS0_Handler                          0x0000028b   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS1_Handler                          0x0000028d   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS2_Handler                          0x0000028f   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS3_Handler                          0x00000291   Thumb Code     2  startup_tm4c129.o(.text)
    EBI0_Handler                             0x00000293   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOJ_Handler                            0x00000295   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOK_Handler                            0x00000297   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOL_Handler                            0x00000299   Thumb Code     2  startup_tm4c129.o(.text)
    SSI2_Handler                             0x0000029b   Thumb Code     2  startup_tm4c129.o(.text)
    SSI3_Handler                             0x0000029d   Thumb Code     2  startup_tm4c129.o(.text)
    UART3_Handler                            0x0000029f   Thumb Code     2  startup_tm4c129.o(.text)
    UART4_Handler                            0x000002a1   Thumb Code     2  startup_tm4c129.o(.text)
    UART5_Handler                            0x000002a3   Thumb Code     2  startup_tm4c129.o(.text)
    UART6_Handler                            0x000002a5   Thumb Code     2  startup_tm4c129.o(.text)
    UART7_Handler                            0x000002a7   Thumb Code     2  startup_tm4c129.o(.text)
    I2C2_Handler                             0x000002a9   Thumb Code     2  startup_tm4c129.o(.text)
    I2C3_Handler                             0x000002ab   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER4A_Handler                          0x000002ad   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER4B_Handler                          0x000002af   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER5A_Handler                          0x000002b1   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER5B_Handler                          0x000002b3   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER0A_Handler                         0x000002b5   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER0B_Handler                         0x000002b7   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER1A_Handler                         0x000002b9   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER1B_Handler                         0x000002bb   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER2A_Handler                         0x000002bd   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER2B_Handler                         0x000002bf   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER3A_Handler                         0x000002c1   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER3B_Handler                         0x000002c3   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER4A_Handler                         0x000002c5   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER4B_Handler                         0x000002c7   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER5A_Handler                         0x000002c9   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER5B_Handler                         0x000002cb   Thumb Code     2  startup_tm4c129.o(.text)
    FPU_Handler                              0x000002cd   Thumb Code     2  startup_tm4c129.o(.text)
    I2C4_Handler                             0x000002cf   Thumb Code     2  startup_tm4c129.o(.text)
    I2C5_Handler                             0x000002d1   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOM_Handler                            0x000002d3   Thumb Code     2  startup_tm4c129.o(.text)
    GPION_Handler                            0x000002d5   Thumb Code     2  startup_tm4c129.o(.text)
    TAMPER_Handler                           0x000002d7   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP0_Handler                           0x000002d9   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP1_Handler                           0x000002db   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP2_Handler                           0x000002dd   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP3_Handler                           0x000002df   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP4_Handler                           0x000002e1   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP5_Handler                           0x000002e3   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP6_Handler                           0x000002e5   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP7_Handler                           0x000002e7   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ0_Handler                           0x000002e9   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ1_Handler                           0x000002eb   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ2_Handler                           0x000002ed   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ3_Handler                           0x000002ef   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ4_Handler                           0x000002f1   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ5_Handler                           0x000002f3   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ6_Handler                           0x000002f5   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ7_Handler                           0x000002f7   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOR_Handler                            0x000002f9   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOS_Handler                            0x000002fb   Thumb Code     2  startup_tm4c129.o(.text)
    SHAMD5_Handler                           0x000002fd   Thumb Code     2  startup_tm4c129.o(.text)
    AES_Handler                              0x000002ff   Thumb Code     2  startup_tm4c129.o(.text)
    DES3DES_Handler                          0x00000301   Thumb Code     2  startup_tm4c129.o(.text)
    LCDCONTROLLER_Handler                    0x00000303   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER6A_Handler                          0x00000305   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER6B_Handler                          0x00000307   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER7A_Handler                          0x00000309   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER7B_Handler                          0x0000030b   Thumb Code     2  startup_tm4c129.o(.text)
    I2C6_Handler                             0x0000030d   Thumb Code     2  startup_tm4c129.o(.text)
    I2C7_Handler                             0x0000030f   Thumb Code     2  startup_tm4c129.o(.text)
    HIMSCANKEYBOARD_Handler                  0x00000311   Thumb Code     2  startup_tm4c129.o(.text)
    ONEWIRE_Handler                          0x00000313   Thumb Code     2  startup_tm4c129.o(.text)
    HIMPS2_Handler                           0x00000315   Thumb Code     2  startup_tm4c129.o(.text)
    HIMLEDSEQUENCER_Handler                  0x00000317   Thumb Code     2  startup_tm4c129.o(.text)
    HIMCONSUMERIR_Handler                    0x00000319   Thumb Code     2  startup_tm4c129.o(.text)
    I2C8_Handler                             0x0000031b   Thumb Code     2  startup_tm4c129.o(.text)
    I2C9_Handler                             0x0000031d   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOT_Handler                            0x0000031f   Thumb Code     2  startup_tm4c129.o(.text)
    SVC_Handler                              0x00000329   Thumb Code   154  irq_armv7m.o(.text)
    PendSV_Handler                           0x000003c3   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x000003d3   Thumb Code    16  irq_armv7m.o(.text)
    rand                                     0x000003f1   Thumb Code    20  rand.o(.text)
    srand                                    0x00000405   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x00000415   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000415   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000415   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00000439   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000439   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000439   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000447   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000447   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000447   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0000044b   Thumb Code    18  memseta.o(.text)
    strcpy                                   0x0000045d   Thumb Code    18  strcpy.o(.text)
    __aeabi_uidiv                            0x0000046f   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x0000046f   Thumb Code    44  uidiv.o(.text)
    __aeabi_uldivmod                         0x0000049b   Thumb Code    98  uldiv.o(.text)
    __I$use$fp                               0x000004fd   Thumb Code     0  iusefp.o(.text)
    __aeabi_dadd                             0x000004fd   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x0000063f   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x00000645   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x0000064b   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x0000072f   Thumb Code   222  ddiv.o(.text)
    __aeabi_d2ulz                            0x0000080d   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x0000083d   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x0000086d   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x0000086d   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00000891   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000891   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000008af   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x000008af   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x000008cf   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x000008cf   Thumb Code     0  llsshr.o(.text)
    _double_round                            0x000008f3   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000911   Thumb Code   156  depilogue.o(.text)
    EventRecordData                          0x00000a45   Thumb Code   388  eventrecorder.o(.text.EventRecordData)
    EventRecorderEnable                      0x00000cc9   Thumb Code   146  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x00000d5d   Thumb Code   450  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderStart                       0x00000f21   Thumb Code    74  eventrecorder.o(.text.EventRecorderStart)
    EventRecorderTimerGetCount               0x00000f6d   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerGetFreq                0x00000f79   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    EventRecorderTimerSetup                  0x00000f85   Thumb Code    36  eventrecorder.o(.text.EventRecorderTimerSetup)
    OS_Tick_AcknowledgeIRQ                   0x000010f9   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00001101   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00001125   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0000112d   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    SystemInit                               0x00001199   Thumb Code    36  system_tm4c129.o(.text.SystemInit)
    Thread_Consome                           0x00001221   Thumb Code    64  main.o(.text.Thread_Consome)
    Thread_Luminosidade                      0x00001261   Thumb Code    92  main.o(.text.Thread_Luminosidade)
    Thread_Temperatura                       0x000012bd   Thumb Code    92  main.o(.text.Thread_Temperatura)
    fputc                                    0x000014d1   Thumb Code    48  retarget_io.o(.text.fputc)
    main                                     0x00001501   Thumb Code   206  main.o(.text.main)
    osDelay                                  0x000015d1   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x000015f5   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00001625   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00001651   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00001675   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x000016e5   Thumb Code    32  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00001709   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxErrorNotify                         0x00001789   Thumb Code    46  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x000017b9   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x000017c1   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x000017c5   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x000017c7   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00001833   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00001875   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x000018ab   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x000018e5   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x0000192f   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x00001a11   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x00001a35   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x00001a7d   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x00001ac5   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00001b4d   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001ca9   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001d19   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00001ddf   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001df1   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00001e1d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00001e31   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00001e81   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00001e95   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x00001ea9   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001edd   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001ee9   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001f25   Thumb Code    48  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001f55   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x00001fcd   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x00001fed   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x0000207d   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x00002089   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x000020ad   Thumb Code    32  rtx_thread.o(.text.osThreadYield)
    __0printf                                0x000027f5   Thumb Code    22  printfa.o(i.__0printf)
    __1printf                                0x000027f5   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x000027f5   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x000027f5   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x000027f5   Thumb Code     0  printfa.o(i.__0printf)
    __scatterload_copy                       0x00002815   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00002823   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00002825   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    osRtxConfig                              0x000030e8   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x00003158   Data          56  rtx_lib.o(.rodata)
    EventRecorderInfo                        0x00003190   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    osRtxUserSVC                             0x000031a8   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x0000323c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000325c   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    SystemCoreClock                          0x20000008   Data           4  system_tm4c129.o(.data.SystemCoreClock)
    osRtxInfo                                0x2000000c   Data         164  rtx_kernel.o(.data.os)
    fila_mensagens                           0x200000c4   Data           4  main.o(.bss.fila_mensagens)
    .bss.os.msgqueue.cb$$Base                0x200085ec   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008620   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20008670   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200086f8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    tid_Thread_Consome                       0x20008b04   Data           4  main.o(.bss.tid_Thread_Consome)
    tid_Thread_Luminosidade                  0x20008b08   Data           4  main.o(.bss.tid_Thread_Luminosidade)
    tid_Thread_Temperatura                   0x20008b0c   Data           4  main.o(.bss.tid_Thread_Temperatura)
    __initial_sp                             0x20008d10   Data           0  startup_tm4c129.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000215

  Load Region LR_1 (Base: 0x00000000, Size: 0x0000330c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000325c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000200   Data   RO          143    RESET               startup_tm4c129.o
    0x00000200   0x00000200   0x00000000   Code   RO          648  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000200   0x00000200   0x00000004   Code   RO          696    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000204   0x00000204   0x00000004   Code   RO          699    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000208   0x00000208   0x00000000   Code   RO          701    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000208   0x00000208   0x00000000   Code   RO          703    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000208   0x00000208   0x00000008   Code   RO          704    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000210   0x00000210   0x00000000   Code   RO          706    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000210   0x00000210   0x00000000   Code   RO          708    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000210   0x00000210   0x00000004   Code   RO          697    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000214   0x00000214   0x00000114   Code   RO          144  * .text               startup_tm4c129.o
    0x00000328   0x00000328   0x000000c8   Code   RO          498    .text               RTX_CM4F.lib(irq_armv7m.o)
    0x000003f0   0x000003f0   0x00000024   Code   RO          657    .text               mc_w.l(rand.o)
    0x00000414   0x00000414   0x00000024   Code   RO          660    .text               mc_w.l(memcpya.o)
    0x00000438   0x00000438   0x00000024   Code   RO          662    .text               mc_w.l(memseta.o)
    0x0000045c   0x0000045c   0x00000012   Code   RO          664    .text               mc_w.l(strcpy.o)
    0x0000046e   0x0000046e   0x0000002c   Code   RO          719    .text               mc_w.l(uidiv.o)
    0x0000049a   0x0000049a   0x00000062   Code   RO          721    .text               mc_w.l(uldiv.o)
    0x000004fc   0x000004fc   0x00000000   Code   RO          723    .text               mc_w.l(iusefp.o)
    0x000004fc   0x000004fc   0x0000014e   Code   RO          724    .text               mf_w.l(dadd.o)
    0x0000064a   0x0000064a   0x000000e4   Code   RO          726    .text               mf_w.l(dmul.o)
    0x0000072e   0x0000072e   0x000000de   Code   RO          728    .text               mf_w.l(ddiv.o)
    0x0000080c   0x0000080c   0x00000030   Code   RO          730    .text               mf_w.l(dfixul.o)
    0x0000083c   0x0000083c   0x00000030   Code   RO          732    .text               mf_w.l(cdrcmple.o)
    0x0000086c   0x0000086c   0x00000024   Code   RO          734    .text               mc_w.l(init.o)
    0x00000890   0x00000890   0x0000001e   Code   RO          736    .text               mc_w.l(llshl.o)
    0x000008ae   0x000008ae   0x00000020   Code   RO          738    .text               mc_w.l(llushr.o)
    0x000008ce   0x000008ce   0x00000024   Code   RO          740    .text               mc_w.l(llsshr.o)
    0x000008f2   0x000008f2   0x000000ba   Code   RO          742    .text               mf_w.l(depilogue.o)
    0x000009ac   0x000009ac   0x0000003c   Code   RO           78    .text.EventCheckFilter  eventrecorder.o
    0x000009e8   0x000009e8   0x0000005a   Code   RO           64    .text.EventGetTS    eventrecorder.o
    0x00000a42   0x00000a42   0x00000002   PAD
    0x00000a44   0x00000a44   0x00000184   Code   RO           76    .text.EventRecordData  eventrecorder.o
    0x00000bc8   0x00000bc8   0x000000fe   Code   RO           66    .text.EventRecordItem  eventrecorder.o
    0x00000cc6   0x00000cc6   0x00000002   PAD
    0x00000cc8   0x00000cc8   0x00000092   Code   RO           62    .text.EventRecorderEnable  eventrecorder.o
    0x00000d5a   0x00000d5a   0x00000002   PAD
    0x00000d5c   0x00000d5c   0x000001c2   Code   RO           58    .text.EventRecorderInitialize  eventrecorder.o
    0x00000f1e   0x00000f1e   0x00000002   PAD
    0x00000f20   0x00000f20   0x0000004a   Code   RO           68    .text.EventRecorderStart  eventrecorder.o
    0x00000f6a   0x00000f6a   0x00000002   PAD
    0x00000f6c   0x00000f6c   0x0000000c   Code   RO           56    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x00000f78   0x00000f78   0x0000000c   Code   RO           54    .text.EventRecorderTimerGetFreq  eventrecorder.o
    0x00000f84   0x00000f84   0x00000024   Code   RO           52    .text.EventRecorderTimerSetup  eventrecorder.o
    0x00000fa8   0x00000fa8   0x00000012   Code   RO           80    .text.GetContext    eventrecorder.o
    0x00000fba   0x00000fba   0x00000002   PAD
    0x00000fbc   0x00000fbc   0x00000012   Code   RO           96    .text.GetRecordIndex  eventrecorder.o
    0x00000fce   0x00000fce   0x00000002   PAD
    0x00000fd0   0x00000fd0   0x00000012   Code   RO          104    .text.IncrementRecordsDumped  eventrecorder.o
    0x00000fe2   0x00000fe2   0x00000002   PAD
    0x00000fe4   0x00000fe4   0x00000012   Code   RO          102    .text.IncrementRecordsWritten  eventrecorder.o
    0x00000ff6   0x00000ff6   0x00000002   PAD
    0x00000ff8   0x00000ff8   0x00000036   Code   RO           98    .text.LockRecord    eventrecorder.o
    0x0000102e   0x0000102e   0x00000002   PAD
    0x00001030   0x00001030   0x00000012   Code   RO           86    .text.LockTS_Overflow  eventrecorder.o
    0x00001042   0x00001042   0x00000040   Code   RO          479    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001082   0x00001082   0x00000058   Code   RO          473    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000010da   0x000010da   0x0000001c   Code   RO          471    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000010f6   0x000010f6   0x00000002   PAD
    0x000010f8   0x000010f8   0x00000008   Code   RO          628    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x00001100   0x00001100   0x00000024   Code   RO          624    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x00001124   0x00001124   0x00000006   Code   RO          630    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x0000112a   0x0000112a   0x00000002   PAD
    0x0000112c   0x0000112c   0x00000040   Code   RO          622    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x0000116c   0x0000116c   0x0000000c   Code   RO          221    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_kernel.o)
    0x00001178   0x00001178   0x00000006   Code   RO          361    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_thread.o)
    0x0000117e   0x0000117e   0x0000000c   Code   RO          487    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0000118a   0x0000118a   0x00000006   Code   RO          223    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_kernel.o)
    0x00001190   0x00001190   0x00000006   Code   RO          489    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001196   0x00001196   0x00000002   PAD
    0x00001198   0x00001198   0x00000024   Code   RO          153    .text.SystemInit    system_tm4c129.o
    0x000011bc   0x000011bc   0x00000064   Code   RO          313    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x00001220   0x00001220   0x00000040   Code   RO            8    .text.Thread_Consome  main.o
    0x00001260   0x00001260   0x0000005c   Code   RO            6    .text.Thread_Luminosidade  main.o
    0x000012bc   0x000012bc   0x0000005c   Code   RO            4    .text.Thread_Temperatura  main.o
    0x00001318   0x00001318   0x00000044   Code   RO          413    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x0000135c   0x0000135c   0x00000032   Code   RO          100    .text.UnlockRecord  eventrecorder.o
    0x0000138e   0x0000138e   0x00000002   PAD
    0x00001390   0x00001390   0x00000012   Code   RO           88    .text.UnlockTS_Overflow  eventrecorder.o
    0x000013a2   0x000013a2   0x00000002   PAD
    0x000013a4   0x000013a4   0x0000001a   Code   RO           90    .text.UpdateTS      eventrecorder.o
    0x000013be   0x000013be   0x00000002   PAD
    0x000013c0   0x000013c0   0x00000020   Code   RO          106    .text.atomic_inc32  eventrecorder.o
    0x000013e0   0x000013e0   0x00000024   Code   RO          108    .text.atomic_inc8   eventrecorder.o
    0x00001404   0x00001404   0x00000020   Code   RO           94    .text.atomic_wr32   eventrecorder.o
    0x00001424   0x00001424   0x00000028   Code   RO           92    .text.atomic_wr8    eventrecorder.o
    0x0000144c   0x0000144c   0x00000082   Code   RO           60    .text.crc16_ccitt   eventrecorder.o
    0x000014ce   0x000014ce   0x00000002   PAD
    0x000014d0   0x000014d0   0x00000030   Code   RO          120    .text.fputc         retarget_io.o
    0x00001500   0x00001500   0x000000ce   Code   RO            2    .text.main          main.o
    0x000015ce   0x000015ce   0x00000002   PAD
    0x000015d0   0x000015d0   0x00000024   Code   RO          379    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x000015f4   0x000015f4   0x00000030   Code   RO          173    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x00001624   0x00001624   0x0000002c   Code   RO          167    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x00001650   0x00001650   0x00000024   Code   RO          177    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x00001674   0x00001674   0x00000070   Code   RO          447    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000016e4   0x000016e4   0x00000024   Code   RO          441    .text.osMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001708   0x00001708   0x00000080   Code   RO          445    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001788   0x00001788   0x0000002e   Code   RO           43    .text.osRtxErrorNotify  rtx_config.o
    0x000017b6   0x000017b6   0x00000002   PAD
    0x000017b8   0x000017b8   0x00000008   Code   RO           41    .text.osRtxIdleThread  rtx_config.o
    0x000017c0   0x000017c0   0x00000004   Code   RO          165    .text.osRtxKernelErrorNotify  RTX_CM4F.lib(rtx_kernel.o)
    0x000017c4   0x000017c4   0x00000002   Code   RO          163    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x000017c6   0x000017c6   0x0000006c   Code   RO          544    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x00001832   0x00001832   0x00000042   Code   RO          546    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x00001874   0x00001874   0x00000036   Code   RO          542    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x000018aa   0x000018aa   0x0000003a   Code   RO          558    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x000018e4   0x000018e4   0x0000004a   Code   RO          560    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x0000192e   0x0000192e   0x00000038   Code   RO          556    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x00001966   0x00001966   0x000000aa   Code   RO          469    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001a10   0x00001a10   0x00000024   Code   RO          437    .text.osRtxMessageQueueTimerSetup  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001a34   0x00001a34   0x00000048   Code   RO          506    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x00001a7c   0x00001a7c   0x00000048   Code   RO          508    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x00001ac4   0x00001ac4   0x00000088   Code   RO          610    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x00001b4c   0x00001b4c   0x00000070   Code   RO          612    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x00001bbc   0x00001bbc   0x00000034   Code   RO          253    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x00001bf0   0x00001bf0   0x0000007c   Code   RO          261    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x00001c6c   0x00001c6c   0x0000003c   Code   RO          257    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x00001ca8   0x00001ca8   0x00000050   Code   RO          245    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x00001cf8   0x00001cf8   0x00000020   Code   RO          345    .text.osRtxThreadDestroy  RTX_CM4F.lib(rtx_thread.o)
    0x00001d18   0x00001d18   0x00000050   Code   RO          251    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x00001d68   0x00001d68   0x00000058   Code   RO          337    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x00001dc0   0x00001dc0   0x0000001e   Code   RO          343    .text.osRtxThreadJoinWakeup  RTX_CM4F.lib(rtx_thread.o)
    0x00001dde   0x00001dde   0x00000012   Code   RO          237    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x00001df0   0x00001df0   0x0000002c   Code   RO          235    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x00001e1c   0x00001e1c   0x00000014   Code   RO          241    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x00001e30   0x00001e30   0x00000026   Code   RO          239    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x00001e56   0x00001e56   0x00000028   Code   RO          311    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x00001e7e   0x00001e7e   0x00000002   PAD
    0x00001e80   0x00001e80   0x00000014   Code   RO          243    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x00001e94   0x00001e94   0x00000014   Code   RO          247    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x00001ea8   0x00001ea8   0x00000034   Code   RO          263    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x00001edc   0x00001edc   0x0000000c   Code   RO          249    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x00001ee8   0x00001ee8   0x0000003c   Code   RO          259    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x00001f24   0x00001f24   0x00000030   Code   RO          255    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x00001f54   0x00001f54   0x00000078   Code   RO          608    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x00001fcc   0x00001fcc   0x00000020   Code   RO          395    .text.osRtxTimerSetup  RTX_CM4F.lib(rtx_timer.o)
    0x00001fec   0x00001fec   0x00000020   Code   RO          399    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x0000200c   0x0000200c   0x00000070   Code   RO          397    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x0000207c   0x0000207c   0x0000000c   Code   RO          295    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x00002088   0x00002088   0x00000024   Code   RO          267    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x000020ac   0x000020ac   0x00000024   Code   RO          285    .text.osThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x000020d0   0x000020d0   0x0000007c   Code   RO          122    .text.stdout_putchar  retarget_io.o
    0x0000214c   0x0000214c   0x00000016   Code   RO          383    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x00002162   0x00002162   0x00000002   PAD
    0x00002164   0x00002164   0x0000000c   Code   RO          175    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x00002170   0x00002170   0x00000100   Code   RO          205    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x00002270   0x00002270   0x0000008c   Code   RO          207    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x000022fc   0x000022fc   0x000000cc   Code   RO          481    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000023c8   0x000023c8   0x00000118   Code   RO          439    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000024e0   0x000024e0   0x000000a8   Code   RO          477    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00002588   0x00002588   0x0000004c   Code   RO          341    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x000025d4   0x000025d4   0x000001e8   Code   RO          265    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x000027bc   0x000027bc   0x00000038   Code   RO          327    .text.svcRtxThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x000027f4   0x000027f4   0x00000020   Code   RO          669    i.__0printf         mc_w.l(printfa.o)
    0x00002814   0x00002814   0x0000000e   Code   RO          746    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00002822   0x00002822   0x00000002   Code   RO          747    i.__scatterload_null  mc_w.l(handlers.o)
    0x00002824   0x00002824   0x0000000e   Code   RO          748    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00002832   0x00002832   0x00000002   PAD
    0x00002834   0x00002834   0x00000184   Code   RO          676    i._fp_digits        mc_w.l(printfa.o)
    0x000029b8   0x000029b8   0x000006dc   Code   RO          677    i._printf_core      mc_w.l(printfa.o)
    0x00003094   0x00003094   0x00000024   Code   RO          678    i._printf_post_padding  mc_w.l(printfa.o)
    0x000030b8   0x000030b8   0x0000002e   Code   RO          679    i._printf_pre_padding  mc_w.l(printfa.o)
    0x000030e6   0x000030e6   0x00000002   PAD
    0x000030e8   0x000030e8   0x00000070   Data   RO           27    .rodata             rtx_lib.o
    0x00003158   0x00003158   0x00000038   Data   RO           30    .rodata             rtx_lib.o
    0x00003190   0x00003190   0x00000018   Data   RO          111    .rodata.EventRecorderInfo  eventrecorder.o
    0x000031a8   0x000031a8   0x00000004   Data   RO           29    .rodata.osRtxUserSVC  rtx_lib.o
    0x000031ac   0x000031ac   0x00000024   Data   RO           24    .rodata.os_idle_thread_attr  rtx_lib.o
    0x000031d0   0x000031d0   0x00000018   Data   RO           26    .rodata.os_timer_mq_attr  rtx_lib.o
    0x000031e8   0x000031e8   0x00000024   Data   RO           25    .rodata.os_timer_thread_attr  rtx_lib.o
    0x0000320c   0x0000320c   0x00000021   Data   RO           14    .rodata.str1.1      main.o
    0x0000322d   0x0000322d   0x00000003   PAD
    0x00003230   0x00003230   0x0000000b   Data   RO          225    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x0000323b   0x0000323b   0x00000001   PAD
    0x0000323c   0x0000323c   0x00000020   Data   RO          745    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x0000325c, Size: 0x000000b0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000325c   0x00000004   Data   RW          655    .data               mc_w.l(stdout.o)
    0x20000004   0x00003260   0x00000004   Data   RW          658    .data               mc_w.l(rand.o)
    0x20000008   0x00003264   0x00000004   Data   RW          155    .data.SystemCoreClock  system_tm4c129.o
    0x2000000c   0x00003268   0x000000a4   Data   RW          226    .data.os            RTX_CM4F.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200000c0, Load base: 0x0000330c, Size: 0x00008c50, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000c0        -       0x00000001   Zero   RW          112    .bss.TS_OverflowLock  eventrecorder.o
    0x200000c1   0x0000330c   0x00000003   PAD
    0x200000c4        -       0x00000004   Zero   RW           10    .bss.fila_mensagens  main.o
    0x200000c8   0x0000330c   0x00000038   PAD
    0x20000100        -       0x000004a4   Zero   RW          110    .bss.noinit         eventrecorder.o
    0x200005a4   0x0000330c   0x00000004   PAD
    0x200005a8        -       0x00008040   Zero   RW           23    .bss.os             rtx_lib.o
    0x200085e8        -       0x00000001   Zero   RW          640    .bss.os             RTX_CM4F.lib(os_systick.o)
    0x200085e9   0x0000330c   0x00000003   PAD
    0x200085ec        -       0x00000034   Zero   RW           34    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008620        -       0x00000050   Zero   RW           35    .bss.os.msgqueue.mem  rtx_lib.o
    0x20008670        -       0x00000088   Zero   RW           31    .bss.os.thread.cb   rtx_lib.o
    0x200086f8        -       0x00000200   Zero   RW           32    .bss.os.thread.idle.stack  rtx_lib.o
    0x200088f8        -       0x00000200   Zero   RW           33    .bss.os.thread.timer.stack  rtx_lib.o
    0x20008af8        -       0x00000008   Zero   RW          134    .bss.stdout_putchar.buffer  retarget_io.o
    0x20008b00        -       0x00000004   Zero   RW          133    .bss.stdout_putchar.index  retarget_io.o
    0x20008b04        -       0x00000004   Zero   RW           13    .bss.tid_Thread_Consome  main.o
    0x20008b08        -       0x00000004   Zero   RW           12    .bss.tid_Thread_Luminosidade  main.o
    0x20008b0c        -       0x00000004   Zero   RW           11    .bss.tid_Thread_Temperatura  main.o
    0x20008b10        -       0x00000200   Zero   RW          141    STACK               startup_tm4c129.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2030          0         24          0       1189       8824   eventrecorder.o
       454          0         33          0         16       2023   main.o
       172          0          0          0         12       1928   retarget_io.o
        54          6          0          0          0        748   rtx_config.o
         0          0        268          0      34124       5617   rtx_lib.o
       276          8        512          0        512       6068   startup_tm4c129.o
        36          0          0          4          0       1433   system_tm4c129.o

    ----------------------------------------------------------------------
      3054         14        872          4      35916      26641   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        32          0          3          0         63          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       200         12          0          0          0        634   irq_armv7m.o
       114         20          0          0          1       3199   os_systick.o
        58          4          0          0          0       2797   rtx_delay.o
       560         48         11        164          0      16781   rtx_kernel.o
       228          0          0          0          0       2590   rtx_memory.o
       188          0          0          0          0      16188   rtx_mempool.o
      1332         28          0          0          0      18765   rtx_msgqueue.o
       144          0          0          0          0      10068   rtx_mutex.o
       368         18          0          0          0       5444   rtx_system.o
      1728         52          0          0          0      32486   rtx_thread.o
       244         12          0          0          0      10433   rtx_timer.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
      2258         90          0          0          0        452   printfa.o
        36         10          0          4          0        136   rand.o
         0          0          0          4          0          0   stdout.o
        18          0          0          0          0         68   strcpy.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
      8954        310         12        172          4     121317   Library Totals
        14          0          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5164        194         11        164          1     119385   RTX_CM4F.lib
      2710        116          0          8          0       1276   mc_w.l
      1066          0          0          0          0        656   mf_w.l

    ----------------------------------------------------------------------
      8954        310         12        172          4     121317   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12008        324        884        176      35920     146946   Grand Totals
     12008        324        884        176      35920     146946   ELF Image Totals
     12008        324        884        176          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12892 (  12.59kB)
    Total RW  Size (RW Data + ZI Data)             36096 (  35.25kB)
    Total ROM Size (Code + RO Data + RW Data)      13068 (  12.76kB)

==============================================================================

